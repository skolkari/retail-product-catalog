openapi: 3.0.0
info:
  title: Retail Product Catalog API
  description: API for managing and searching a catalog of retail products.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local server

paths:
  /products:
    get:
      summary: Retrieve all products with pagination
      parameters:
        - in: query
          name: start
          required: true
          schema:
            type: integer
          description: The start index for the pagination
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: The number of items to return
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductWithId"
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /products/{id}:
    get:
      summary: Retrieve a product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The product ID
      responses:
        "200":
          description: A single product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductWithId"
        "404":
          description: Product not found

  /search:
    get:
      summary: Search for products using a fuzzy search algorithm with pagination
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: The search query
        - in: query
          name: start
          required: true
          schema:
            type: integer
          description: The start index for the pagination
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: The number of items to return
      responses:
        "200":
          description: A list of products matching the search query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductWithId"

components:
  schemas:
    Product:
      type: object
      required:
        - name
        - category
        - description
        - price
        - imageUrl
      properties:
        name:
          type: string
          example: "Product Name"
        category:
          type: string
          example: "Category Name"
        description:
          type: string
          example: "Product Description"
        price:
          type: number
          format: float
          example: 19.99
        imageUrl:
          type: string
          format: uri
          example: "https://example.com/image.jpg"
    ProductWithId:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: "123e4567-e89b-12d3-a456-426614174000"
